// Generated from PrimerPaso.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PrimerPasoLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__3=1, T__2=2, T__1=3, T__0=4, OPERATOR_NOT=5, OPERATOR_AND=6, OPERATOR_OR=7, 
		OPERATOR_EQU=8, OPERATOR_DIFF=9, OPERATOR_GRT=10, OPERATOR_LOT=11, OPERATOR_GRE=12, 
		OPERATOR_LOE=13, OPERATOR_NEG=14, OPERATOR_POW=15, OPERATOR_MULT=16, OPERATOR_DIV=17, 
		OPERATOR_ADD=18, OPERATOR_SUB=19, L_PARENTHESIS=20, R_PARENTHESIS=21, 
		L_BRACE=22, R_BRACE=23, L_BRACKET=24, R_BRACKET=25, DELIMITER=26, COMMA=27, 
		FUNC_UPPERCASE=28, FUNC_LEN=29, FUNC_AMOUNT=30, FUNC_TOSTRING=31, FUNC_TOINT=32, 
		FUNC_PRINT=33, FUNC_MAIN=34, FUNC_POW=35, FUNC_ISDIGIT=36, FUNC_SORTASC=37, 
		FUNC_SORTDES=38, FUNC_CHARAT=39, FUNC_HIGHER=40, FUNC_LESS=41, FUNC_DIVIDE=42, 
		FUNC_CHANGE=43, FUNC_REPLACE=44, FUNC_CONTAINS=45, FUNC_ISEMPTY=46, FUNC_COMPARESTRING=47, 
		FUNC_COMPARECHAR=48, VOID=49, RETURN=50, IF=51, ELSE=52, OPERATOR_ASSIG=53, 
		ID=54, INLINE_COMMENT=55, WS=56, WHILE=57, FOR=58, DO=59, CHARACTER=60, 
		STRING=61, INTEGER=62, BOOLEAN=63;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'hilera'", "'entero'", "'bool'", "'letra'", "'!'", "'y'", "'o'", "'=='", 
		"'!='", "'>'", "'<'", "'<='", "'>='", "OPERATOR_NEG", "'^'", "'*'", "'/'", 
		"'+'", "OPERATOR_SUB", "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", 
		"','", "'mayuscula'", "'largo'", "'cantidad'", "'aHilera'", "'aNumero'", 
		"'imprimir'", "'principal'", "'potencia'", "'esDigito'", "'ordenarAsc'", 
		"'ordenarDes'", "'caracterEn'", "'mayor'", "'menor'", "'dividir'", "'cambiar'", 
		"'reemplazar'", "'contiene'", "'esVacia'", "'compararHileras'", "'compararLetra'", 
		"'nada'", "'retorna'", "'si'", "'sino'", "'='", "ID", "INLINE_COMMENT", 
		"WS", "'por mientras'", "'para cada'", "'hacer'", "CHARACTER", "STRING", 
		"INTEGER", "BOOLEAN"
	};
	public static final String[] ruleNames = {
		"T__3", "T__2", "T__1", "T__0", "OPERATOR_NOT", "OPERATOR_AND", "OPERATOR_OR", 
		"OPERATOR_EQU", "OPERATOR_DIFF", "OPERATOR_GRT", "OPERATOR_LOT", "OPERATOR_GRE", 
		"OPERATOR_LOE", "OPERATOR_NEG", "OPERATOR_POW", "OPERATOR_MULT", "OPERATOR_DIV", 
		"OPERATOR_ADD", "OPERATOR_SUB", "L_PARENTHESIS", "R_PARENTHESIS", "L_BRACE", 
		"R_BRACE", "L_BRACKET", "R_BRACKET", "DELIMITER", "COMMA", "FUNC_UPPERCASE", 
		"FUNC_LEN", "FUNC_AMOUNT", "FUNC_TOSTRING", "FUNC_TOINT", "FUNC_PRINT", 
		"FUNC_MAIN", "FUNC_POW", "FUNC_ISDIGIT", "FUNC_SORTASC", "FUNC_SORTDES", 
		"FUNC_CHARAT", "FUNC_HIGHER", "FUNC_LESS", "FUNC_DIVIDE", "FUNC_CHANGE", 
		"FUNC_REPLACE", "FUNC_CONTAINS", "FUNC_ISEMPTY", "FUNC_COMPARESTRING", 
		"FUNC_COMPARECHAR", "VOID", "RETURN", "IF", "ELSE", "OPERATOR_ASSIG", 
		"COMILLA", "ID", "INLINE_COMMENT", "WS", "WHILE", "FOR", "DO", "CHARACTER", 
		"STRING", "INTEGER", "BOOLEAN"
	};


	public PrimerPasoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PrimerPaso.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2A\u0211\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3"+
		"\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3"+
		"\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3"+
		"\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3"+
		"%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)"+
		"\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,"+
		"\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3/\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63"+
		"\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\38\38\58\u01af\n8\38\78\u01b2\n8\f8\168\u01b5\13"+
		"8\39\39\39\39\79\u01bb\n9\f9\169\u01be\139\39\39\39\39\3:\6:\u01c5\n:"+
		"\r:\16:\u01c6\3:\3:\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3"+
		"<\3<\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3?\3?\7?\u01ee\n?\f"+
		"?\16?\u01f1\13?\3?\3?\3@\3@\5@\u01f7\n@\3@\3@\7@\u01fb\n@\f@\16@\u01fe"+
		"\13@\5@\u0200\n@\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\3A\5A\u0210\n"+
		"A\4\u01bc\u01ef\2B\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65i\66k\67m\2o8q9s:u;w<y={>}?\177@\u0081A\3\2\7\3\2c|\6\2\13\f\17"+
		"\17\"\"))\3\2\62\62\3\2\63;\3\2\62;\u0218\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M"+
		"\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2"+
		"\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2"+
		"\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u"+
		"\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\3\u0083\3\2\2\2\5\u008a\3\2\2\2\7\u0091\3\2\2\2\t\u0096\3\2\2"+
		"\2\13\u009c\3\2\2\2\r\u009e\3\2\2\2\17\u00a0\3\2\2\2\21\u00a2\3\2\2\2"+
		"\23\u00a5\3\2\2\2\25\u00a8\3\2\2\2\27\u00aa\3\2\2\2\31\u00ac\3\2\2\2\33"+
		"\u00af\3\2\2\2\35\u00b2\3\2\2\2\37\u00b4\3\2\2\2!\u00b6\3\2\2\2#\u00b8"+
		"\3\2\2\2%\u00ba\3\2\2\2\'\u00bc\3\2\2\2)\u00be\3\2\2\2+\u00c0\3\2\2\2"+
		"-\u00c2\3\2\2\2/\u00c4\3\2\2\2\61\u00c6\3\2\2\2\63\u00c8\3\2\2\2\65\u00ca"+
		"\3\2\2\2\67\u00cc\3\2\2\29\u00ce\3\2\2\2;\u00d8\3\2\2\2=\u00de\3\2\2\2"+
		"?\u00e7\3\2\2\2A\u00ef\3\2\2\2C\u00f7\3\2\2\2E\u0100\3\2\2\2G\u010a\3"+
		"\2\2\2I\u0113\3\2\2\2K\u011c\3\2\2\2M\u0127\3\2\2\2O\u0132\3\2\2\2Q\u013d"+
		"\3\2\2\2S\u0143\3\2\2\2U\u0149\3\2\2\2W\u0151\3\2\2\2Y\u0159\3\2\2\2["+
		"\u0164\3\2\2\2]\u016d\3\2\2\2_\u0175\3\2\2\2a\u0185\3\2\2\2c\u0193\3\2"+
		"\2\2e\u0198\3\2\2\2g\u01a0\3\2\2\2i\u01a3\3\2\2\2k\u01a8\3\2\2\2m\u01aa"+
		"\3\2\2\2o\u01ac\3\2\2\2q\u01b6\3\2\2\2s\u01c4\3\2\2\2u\u01ca\3\2\2\2w"+
		"\u01d7\3\2\2\2y\u01e1\3\2\2\2{\u01e7\3\2\2\2}\u01eb\3\2\2\2\177\u01ff"+
		"\3\2\2\2\u0081\u020f\3\2\2\2\u0083\u0084\7j\2\2\u0084\u0085\7k\2\2\u0085"+
		"\u0086\7n\2\2\u0086\u0087\7g\2\2\u0087\u0088\7t\2\2\u0088\u0089\7c\2\2"+
		"\u0089\4\3\2\2\2\u008a\u008b\7g\2\2\u008b\u008c\7p\2\2\u008c\u008d\7v"+
		"\2\2\u008d\u008e\7g\2\2\u008e\u008f\7t\2\2\u008f\u0090\7q\2\2\u0090\6"+
		"\3\2\2\2\u0091\u0092\7d\2\2\u0092\u0093\7q\2\2\u0093\u0094\7q\2\2\u0094"+
		"\u0095\7n\2\2\u0095\b\3\2\2\2\u0096\u0097\7n\2\2\u0097\u0098\7g\2\2\u0098"+
		"\u0099\7v\2\2\u0099\u009a\7t\2\2\u009a\u009b\7c\2\2\u009b\n\3\2\2\2\u009c"+
		"\u009d\7#\2\2\u009d\f\3\2\2\2\u009e\u009f\7{\2\2\u009f\16\3\2\2\2\u00a0"+
		"\u00a1\7q\2\2\u00a1\20\3\2\2\2\u00a2\u00a3\7?\2\2\u00a3\u00a4\7?\2\2\u00a4"+
		"\22\3\2\2\2\u00a5\u00a6\7#\2\2\u00a6\u00a7\7?\2\2\u00a7\24\3\2\2\2\u00a8"+
		"\u00a9\7@\2\2\u00a9\26\3\2\2\2\u00aa\u00ab\7>\2\2\u00ab\30\3\2\2\2\u00ac"+
		"\u00ad\7>\2\2\u00ad\u00ae\7?\2\2\u00ae\32\3\2\2\2\u00af\u00b0\7@\2\2\u00b0"+
		"\u00b1\7?\2\2\u00b1\34\3\2\2\2\u00b2\u00b3\7/\2\2\u00b3\36\3\2\2\2\u00b4"+
		"\u00b5\7`\2\2\u00b5 \3\2\2\2\u00b6\u00b7\7,\2\2\u00b7\"\3\2\2\2\u00b8"+
		"\u00b9\7\61\2\2\u00b9$\3\2\2\2\u00ba\u00bb\7-\2\2\u00bb&\3\2\2\2\u00bc"+
		"\u00bd\7/\2\2\u00bd(\3\2\2\2\u00be\u00bf\7*\2\2\u00bf*\3\2\2\2\u00c0\u00c1"+
		"\7+\2\2\u00c1,\3\2\2\2\u00c2\u00c3\7}\2\2\u00c3.\3\2\2\2\u00c4\u00c5\7"+
		"\177\2\2\u00c5\60\3\2\2\2\u00c6\u00c7\7]\2\2\u00c7\62\3\2\2\2\u00c8\u00c9"+
		"\7_\2\2\u00c9\64\3\2\2\2\u00ca\u00cb\7=\2\2\u00cb\66\3\2\2\2\u00cc\u00cd"+
		"\7.\2\2\u00cd8\3\2\2\2\u00ce\u00cf\7o\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1"+
		"\7{\2\2\u00d1\u00d2\7w\2\2\u00d2\u00d3\7u\2\2\u00d3\u00d4\7e\2\2\u00d4"+
		"\u00d5\7w\2\2\u00d5\u00d6\7n\2\2\u00d6\u00d7\7c\2\2\u00d7:\3\2\2\2\u00d8"+
		"\u00d9\7n\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7t\2\2\u00db\u00dc\7i\2\2"+
		"\u00dc\u00dd\7q\2\2\u00dd<\3\2\2\2\u00de\u00df\7e\2\2\u00df\u00e0\7c\2"+
		"\2\u00e0\u00e1\7p\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4"+
		"\7f\2\2\u00e4\u00e5\7c\2\2\u00e5\u00e6\7f\2\2\u00e6>\3\2\2\2\u00e7\u00e8"+
		"\7c\2\2\u00e8\u00e9\7J\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7n\2\2\u00eb"+
		"\u00ec\7g\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7c\2\2\u00ee@\3\2\2\2\u00ef"+
		"\u00f0\7c\2\2\u00f0\u00f1\7P\2\2\u00f1\u00f2\7w\2\2\u00f2\u00f3\7o\2\2"+
		"\u00f3\u00f4\7g\2\2\u00f4\u00f5\7t\2\2\u00f5\u00f6\7q\2\2\u00f6B\3\2\2"+
		"\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7o\2\2\u00f9\u00fa\7r\2\2\u00fa\u00fb"+
		"\7t\2\2\u00fb\u00fc\7k\2\2\u00fc\u00fd\7o\2\2\u00fd\u00fe\7k\2\2\u00fe"+
		"\u00ff\7t\2\2\u00ffD\3\2\2\2\u0100\u0101\7r\2\2\u0101\u0102\7t\2\2\u0102"+
		"\u0103\7k\2\2\u0103\u0104\7p\2\2\u0104\u0105\7e\2\2\u0105\u0106\7k\2\2"+
		"\u0106\u0107\7r\2\2\u0107\u0108\7c\2\2\u0108\u0109\7n\2\2\u0109F\3\2\2"+
		"\2\u010a\u010b\7r\2\2\u010b\u010c\7q\2\2\u010c\u010d\7v\2\2\u010d\u010e"+
		"\7g\2\2\u010e\u010f\7p\2\2\u010f\u0110\7e\2\2\u0110\u0111\7k\2\2\u0111"+
		"\u0112\7c\2\2\u0112H\3\2\2\2\u0113\u0114\7g\2\2\u0114\u0115\7u\2\2\u0115"+
		"\u0116\7F\2\2\u0116\u0117\7k\2\2\u0117\u0118\7i\2\2\u0118\u0119\7k\2\2"+
		"\u0119\u011a\7v\2\2\u011a\u011b\7q\2\2\u011bJ\3\2\2\2\u011c\u011d\7q\2"+
		"\2\u011d\u011e\7t\2\2\u011e\u011f\7f\2\2\u011f\u0120\7g\2\2\u0120\u0121"+
		"\7p\2\2\u0121\u0122\7c\2\2\u0122\u0123\7t\2\2\u0123\u0124\7C\2\2\u0124"+
		"\u0125\7u\2\2\u0125\u0126\7e\2\2\u0126L\3\2\2\2\u0127\u0128\7q\2\2\u0128"+
		"\u0129\7t\2\2\u0129\u012a\7f\2\2\u012a\u012b\7g\2\2\u012b\u012c\7p\2\2"+
		"\u012c\u012d\7c\2\2\u012d\u012e\7t\2\2\u012e\u012f\7F\2\2\u012f\u0130"+
		"\7g\2\2\u0130\u0131\7u\2\2\u0131N\3\2\2\2\u0132\u0133\7e\2\2\u0133\u0134"+
		"\7c\2\2\u0134\u0135\7t\2\2\u0135\u0136\7c\2\2\u0136\u0137\7e\2\2\u0137"+
		"\u0138\7v\2\2\u0138\u0139\7g\2\2\u0139\u013a\7t\2\2\u013a\u013b\7G\2\2"+
		"\u013b\u013c\7p\2\2\u013cP\3\2\2\2\u013d\u013e\7o\2\2\u013e\u013f\7c\2"+
		"\2\u013f\u0140\7{\2\2\u0140\u0141\7q\2\2\u0141\u0142\7t\2\2\u0142R\3\2"+
		"\2\2\u0143\u0144\7o\2\2\u0144\u0145\7g\2\2\u0145\u0146\7p\2\2\u0146\u0147"+
		"\7q\2\2\u0147\u0148\7t\2\2\u0148T\3\2\2\2\u0149\u014a\7f\2\2\u014a\u014b"+
		"\7k\2\2\u014b\u014c\7x\2\2\u014c\u014d\7k\2\2\u014d\u014e\7f\2\2\u014e"+
		"\u014f\7k\2\2\u014f\u0150\7t\2\2\u0150V\3\2\2\2\u0151\u0152\7e\2\2\u0152"+
		"\u0153\7c\2\2\u0153\u0154\7o\2\2\u0154\u0155\7d\2\2\u0155\u0156\7k\2\2"+
		"\u0156\u0157\7c\2\2\u0157\u0158\7t\2\2\u0158X\3\2\2\2\u0159\u015a\7t\2"+
		"\2\u015a\u015b\7g\2\2\u015b\u015c\7g\2\2\u015c\u015d\7o\2\2\u015d\u015e"+
		"\7r\2\2\u015e\u015f\7n\2\2\u015f\u0160\7c\2\2\u0160\u0161\7|\2\2\u0161"+
		"\u0162\7c\2\2\u0162\u0163\7t\2\2\u0163Z\3\2\2\2\u0164\u0165\7e\2\2\u0165"+
		"\u0166\7q\2\2\u0166\u0167\7p\2\2\u0167\u0168\7v\2\2\u0168\u0169\7k\2\2"+
		"\u0169\u016a\7g\2\2\u016a\u016b\7p\2\2\u016b\u016c\7g\2\2\u016c\\\3\2"+
		"\2\2\u016d\u016e\7g\2\2\u016e\u016f\7u\2\2\u016f\u0170\7X\2\2\u0170\u0171"+
		"\7c\2\2\u0171\u0172\7e\2\2\u0172\u0173\7k\2\2\u0173\u0174\7c\2\2\u0174"+
		"^\3\2\2\2\u0175\u0176\7e\2\2\u0176\u0177\7q\2\2\u0177\u0178\7o\2\2\u0178"+
		"\u0179\7r\2\2\u0179\u017a\7c\2\2\u017a\u017b\7t\2\2\u017b\u017c\7c\2\2"+
		"\u017c\u017d\7t\2\2\u017d\u017e\7J\2\2\u017e\u017f\7k\2\2\u017f\u0180"+
		"\7n\2\2\u0180\u0181\7g\2\2\u0181\u0182\7t\2\2\u0182\u0183\7c\2\2\u0183"+
		"\u0184\7u\2\2\u0184`\3\2\2\2\u0185\u0186\7e\2\2\u0186\u0187\7q\2\2\u0187"+
		"\u0188\7o\2\2\u0188\u0189\7r\2\2\u0189\u018a\7c\2\2\u018a\u018b\7t\2\2"+
		"\u018b\u018c\7c\2\2\u018c\u018d\7t\2\2\u018d\u018e\7N\2\2\u018e\u018f"+
		"\7g\2\2\u018f\u0190\7v\2\2\u0190\u0191\7t\2\2\u0191\u0192\7c\2\2\u0192"+
		"b\3\2\2\2\u0193\u0194\7p\2\2\u0194\u0195\7c\2\2\u0195\u0196\7f\2\2\u0196"+
		"\u0197\7c\2\2\u0197d\3\2\2\2\u0198\u0199\7t\2\2\u0199\u019a\7g\2\2\u019a"+
		"\u019b\7v\2\2\u019b\u019c\7q\2\2\u019c\u019d\7t\2\2\u019d\u019e\7p\2\2"+
		"\u019e\u019f\7c\2\2\u019ff\3\2\2\2\u01a0\u01a1\7u\2\2\u01a1\u01a2\7k\2"+
		"\2\u01a2h\3\2\2\2\u01a3\u01a4\7u\2\2\u01a4\u01a5\7k\2\2\u01a5\u01a6\7"+
		"p\2\2\u01a6\u01a7\7q\2\2\u01a7j\3\2\2\2\u01a8\u01a9\7?\2\2\u01a9l\3\2"+
		"\2\2\u01aa\u01ab\7)\2\2\u01abn\3\2\2\2\u01ac\u01ae\t\2\2\2\u01ad\u01af"+
		"\7a\2\2\u01ae\u01ad\3\2\2\2\u01ae\u01af\3\2\2\2\u01af\u01b3\3\2\2\2\u01b0"+
		"\u01b2\t\2\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b5\3\2\2\2\u01b3\u01b1\3\2"+
		"\2\2\u01b3\u01b4\3\2\2\2\u01b4p\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b6\u01b7"+
		"\7(\2\2\u01b7\u01b8\7(\2\2\u01b8\u01bc\3\2\2\2\u01b9\u01bb\13\2\2\2\u01ba"+
		"\u01b9\3\2\2\2\u01bb\u01be\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bc\u01ba\3\2"+
		"\2\2\u01bd\u01bf\3\2\2\2\u01be\u01bc\3\2\2\2\u01bf\u01c0\7\f\2\2\u01c0"+
		"\u01c1\3\2\2\2\u01c1\u01c2\b9\2\2\u01c2r\3\2\2\2\u01c3\u01c5\t\3\2\2\u01c4"+
		"\u01c3\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c6\u01c7\3\2"+
		"\2\2\u01c7\u01c8\3\2\2\2\u01c8\u01c9\b:\2\2\u01c9t\3\2\2\2\u01ca\u01cb"+
		"\7r\2\2\u01cb\u01cc\7q\2\2\u01cc\u01cd\7t\2\2\u01cd\u01ce\7\"\2\2\u01ce"+
		"\u01cf\7o\2\2\u01cf\u01d0\7k\2\2\u01d0\u01d1\7g\2\2\u01d1\u01d2\7p\2\2"+
		"\u01d2\u01d3\7v\2\2\u01d3\u01d4\7t\2\2\u01d4\u01d5\7c\2\2\u01d5\u01d6"+
		"\7u\2\2\u01d6v\3\2\2\2\u01d7\u01d8\7r\2\2\u01d8\u01d9\7c\2\2\u01d9\u01da"+
		"\7t\2\2\u01da\u01db\7c\2\2\u01db\u01dc\7\"\2\2\u01dc\u01dd\7e\2\2\u01dd"+
		"\u01de\7c\2\2\u01de\u01df\7f\2\2\u01df\u01e0\7c\2\2\u01e0x\3\2\2\2\u01e1"+
		"\u01e2\7j\2\2\u01e2\u01e3\7c\2\2\u01e3\u01e4\7e\2\2\u01e4\u01e5\7g\2\2"+
		"\u01e5\u01e6\7t\2\2\u01e6z\3\2\2\2\u01e7\u01e8\7)\2\2\u01e8\u01e9\13\2"+
		"\2\2\u01e9\u01ea\7)\2\2\u01ea|\3\2\2\2\u01eb\u01ef\7$\2\2\u01ec\u01ee"+
		"\13\2\2\2\u01ed\u01ec\3\2\2\2\u01ee\u01f1\3\2\2\2\u01ef\u01f0\3\2\2\2"+
		"\u01ef\u01ed\3\2\2\2\u01f0\u01f2\3\2\2\2\u01f1\u01ef\3\2\2\2\u01f2\u01f3"+
		"\7$\2\2\u01f3~\3\2\2\2\u01f4\u0200\t\4\2\2\u01f5\u01f7\5\35\17\2\u01f6"+
		"\u01f5\3\2\2\2\u01f6\u01f7\3\2\2\2\u01f7\u01f8\3\2\2\2\u01f8\u01fc\t\5"+
		"\2\2\u01f9\u01fb\t\6\2\2\u01fa\u01f9\3\2\2\2\u01fb\u01fe\3\2\2\2\u01fc"+
		"\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u0200\3\2\2\2\u01fe\u01fc\3\2"+
		"\2\2\u01ff\u01f4\3\2\2\2\u01ff\u01f6\3\2\2\2\u0200\u0080\3\2\2\2\u0201"+
		"\u0202\7x\2\2\u0202\u0203\7g\2\2\u0203\u0204\7t\2\2\u0204\u0205\7f\2\2"+
		"\u0205\u0206\7c\2\2\u0206\u0207\7f\2\2\u0207\u0208\7g\2\2\u0208\u0209"+
		"\7t\2\2\u0209\u0210\7q\2\2\u020a\u020b\7h\2\2\u020b\u020c\7c\2\2\u020c"+
		"\u020d\7n\2\2\u020d\u020e\7u\2\2\u020e\u0210\7q\2\2\u020f\u0201\3\2\2"+
		"\2\u020f\u020a\3\2\2\2\u0210\u0082\3\2\2\2\f\2\u01ae\u01b3\u01bc\u01c6"+
		"\u01ef\u01f6\u01fc\u01ff\u020f\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}